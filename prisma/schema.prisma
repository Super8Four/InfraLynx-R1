
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Region {
  id                String              @id
  name              String
  description       String?
  tags              String[]
  parentId          String?
  parent            Region?             @relation("RegionHierarchy", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children          Region[]            @relation("RegionHierarchy")
  Site              Site[]
  ContactAssignment ContactAssignment[]
}

model SiteGroup {
  id          String @id
  name        String
  description String?
  Site        Site[]
}

model Site {
  id                String              @id
  name              String
  regionId          String?
  region            Region?             @relation(fields: [regionId], references: [id])
  status            String
  groupId           String?
  group             SiteGroup?          @relation(fields: [groupId], references: [id])
  tags              String[]
  latitude          Float?
  longitude         Float?
  tenantId          String?
  tenant            Tenant?             @relation(fields: [tenantId], references: [id])
  tenantGroupId     String?
  tenantGroup       TenantGroup?        @relation(fields: [tenantGroupId], references: [id])
  physicalAddress   String?
  imageUrl          String?
  facility          String?
  asns              String?
  timeZone          String?
  description       String?
  comments          String?
  Location          Location[]
  Device            Device[]
  PowerPanel        PowerPanel[]
  Cluster           Cluster[]
  AccessPoint       AccessPoint[]
  termA_circuits    Circuit[]           @relation("TermA")
  termZ_circuits    Circuit[]           @relation("TermZ")
  ContactAssignment ContactAssignment[]
}

model Location {
  id                String              @id
  name              String
  siteId            String
  site              Site                @relation(fields: [siteId], references: [id])
  description       String?
  Rack              Rack[]
  PowerPanel        PowerPanel[]
  ContactAssignment ContactAssignment[]
}

model TenantGroup {
  id          String   @id
  name        String
  description String?
  Tenant      Tenant[]
  Device      Device[]
  Rack        Rack[]
}

model Tenant {
  id              String            @id
  name            String
  groupId         String?
  group           TenantGroup?      @relation(fields: [groupId], references: [id])
  description     String?
  Site            Site[]
  RackReservation RackReservation[]
  Device          Device[]
  Rack            Rack[]
}

model ContactGroup {
  id      String    @id
  name    String
  description String?
  Contact Contact[]
}

model Contact {
  id                String              @id
  name              String
  email             String
  phone             String
  title             String
  groupId           String?
  group             ContactGroup?       @relation(fields: [groupId], references: [id])
  ContactAssignment ContactAssignment[]
}

model ContactRole {
  id                String              @id
  name              String
  description       String?
  ContactAssignment ContactAssignment[]
}

model ContactAssignment {
  id         String      @id
  objectType String
  objectId   String
  contactId  String
  contact    Contact     @relation(fields: [contactId], references: [id])
  roleId     String
  role       ContactRole @relation(fields: [roleId], references: [id])
  Region     Region?     @relation(fields: [objectId], references: [id])
  Site       Site?       @relation(fields: [objectId], references: [id])
  Location   Location?   @relation(fields: [objectId], references: [id])
}

model Tag {
  id          String  @id
  name        String  @unique
  description String?
}

model DeviceRole {
  id          String   @id
  name        String
  description String?
  color       String
  Device      Device[]
}

model Platform {
  id           String   @id
  name         String
  manufacturer String
  description  String?
  Device       Device[]
}

model DeviceType {
  id           String   @id
  manufacturer String
  model        String
  u_height     Int
  Device       Device[]
}

model VirtualChassis {
  id       String   @id
  name     String   @unique
  domain   String
  masterId String
  Device   Device[]
}

model Device {
  id               String          @id
  name             String          @unique
  deviceTypeId     String
  deviceType       DeviceType      @relation(fields: [deviceTypeId], references: [id])
  status           String
  deviceRoleId     String
  deviceRole       DeviceRole      @relation(fields: [deviceRoleId], references: [id])
  platformId       String?
  platform         Platform?       @relation(fields: [platformId], references: [id])
  siteId           String
  site             Site            @relation(fields: [siteId], references: [id])
  ip               String?
  tags             String[]
  virtualChassisId String?
  virtualChassis   VirtualChassis? @relation(fields: [virtualChassisId], references: [id])
  vcPosition       Int?
  vcPriority       Int?
  rackId           String?
  rack             Rack?           @relation(fields: [rackId], references: [id])
  position         Int?
  rackFace         String?
  assetTag         String?
  serial           String?
  clusterId        String?
  cluster          Cluster?        @relation(fields: [clusterId], references: [id])
  tenantId         String?
  tenant           Tenant?         @relation(fields: [tenantId], references: [id])
  tenantGroupId    String?
  tenantGroup      TenantGroup?    @relation(fields: [tenantGroupId], references: [id])
  configBackup     String?         @db.Text
  IPAddress        IPAddress[]
}

model RackRole {
  id          String  @id
  name        String
  description String?
  color       String
  Rack        Rack[]
}

model RackType {
  id           String @id
  manufacturer String
  model        String
  u_height     Int
  width        String
  Rack         Rack[]
}

model Rack {
  id              String            @id
  name            String
  siteId          String
  site            Site              @relation(fields: [siteId], references: [id])
  locationId      String?
  location        Location?         @relation(fields: [locationId], references: [id])
  roleId          String?
  role            RackRole?         @relation(fields: [roleId], references: [id])
  typeId          String?
  type            RackType?         @relation(fields: [typeId], references: [id])
  status          String
  u_height        Int
  width           String
  tags            String[]
  facilityId      String?
  tenantId        String?
  tenant          Tenant?           @relation(fields: [tenantId], references: [id])
  comments        String?
  serial          String?
  assetTag        String?
  startingUnit    Int?              @default(1)
  tenantGroupId   String?
  tenantGroup     TenantGroup?      @relation(fields: [tenantGroupId], references: [id])
  Device          Device[]
  RackReservation RackReservation[]
  PowerFeed       PowerFeed[]
}

model RackReservation {
  id          String @id
  rackId      String
  rack        Rack   @relation(fields: [rackId], references: [id])
  units       Int[]
  tenantId    String
  tenant      Tenant @relation(fields: [tenantId], references: [id])
  description String
}

model Prefix {
  id          String      @id
  prefix      String      @unique
  status      String
  site        String
  description String?
  tags        String[]
  ips         IPAddress[]
}

model IPAddress {
  id                 String  @id
  address            String  @unique
  status             String
  assignedObjectType String?
  assignedObjectId   String?
  dnsName            String?
  description        String?
  prefixId           String?
  prefix             Prefix? @relation(fields: [prefixId], references: [id])
  Device             Device? @relation(fields: [assignedObjectId], references: [id])
}

model Provider {
  id      String    @id
  name    String
  asn     Int
  account String
  Circuit Circuit[]
}

model CircuitType {
  id          String    @id
  name        String
  description String?
  Circuit     Circuit[]
}

model Circuit {
  id           String      @id
  cid          String      @unique
  providerId   String
  provider     Provider    @relation(fields: [providerId], references: [id])
  typeId       String
  type         CircuitType @relation(fields: [typeId], references: [id])
  status       String
  installDate  DateTime
  commitRate   Int
  description  String?
  termA_siteId String
  termA_site   Site        @relation("TermA", fields: [termA_siteId], references: [id])
  termZ_siteId String
  termZ_site   Site        @relation("TermZ", fields: [termZ_siteId], references: [id])
}

model WirelessLan {
  id          String  @id
  ssid        String  @unique
  vlan        String?
  description String?
  authType    String
}

model AccessPoint {
  id        String @id
  name      String @unique
  siteId    String
  site      Site   @relation(fields: [siteId], references: [id])
  status    String
  model     String
  ipAddress String
}

model VpnTunnel {
  id          String  @id
  name        String  @unique
  status      String
  type        String
  localPeer   String
  remotePeer  String
  description String?
}

model PowerPanel {
  id           String     @id
  name         String
  siteId       String
  site         Site       @relation(fields: [siteId], references: [id])
  locationId   String?
  location     Location?  @relation(fields: [locationId], references: [id])
  voltage      Int
  phase        String
  capacityAmps Int
  PowerFeed    PowerFeed[]
}

model PowerFeed {
  id       String     @id
  name     String
  panelId  String
  panel    PowerPanel @relation(fields: [panelId], references: [id])
  rackId   String?
  rack     Rack?      @relation(fields: [rackId], references: [id])
  status   String
  type     String
  amperage Int
  voltage  Int
}

model ClusterType {
  id          String    @id
  name        String
  description String?
  Cluster     Cluster[]
}

model ClusterGroup {
  id          String    @id
  name        String
  description String?
  Cluster     Cluster[]
}

model Cluster {
  id             String           @id
  name           String
  typeId         String
  type           ClusterType      @relation(fields: [typeId], references: [id])
  groupId        String
  group          ClusterGroup     @relation(fields: [groupId], references: [id])
  siteId         String?
  site           Site?            @relation(fields: [siteId], references: [id])
  comments       String?
  Device         Device[]
  VirtualMachine VirtualMachine[]
}

model VirtualMachine {
  id        String  @id
  name      String  @unique
  status    String
  clusterId String
  cluster   Cluster @relation(fields: [clusterId], references: [id])
  role      String?
  vcpus     Int
  memory    Int
  disk      Int
  primaryIp String?
}
